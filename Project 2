Overview: Transform your Project 1 function library into an object-oriented system by designing and implementing 4-6 core classes for your Information Science domain. This project demonstrates how OOP combines related data and behavior into cohesive, reusable objects.
Key Goal: Create well-designed classes with proper encapsulation, validation, and documentation that integrate your Project 1 functions and prepare for inheritance in Project 3.
Realationships between classes: 

Brainstorming: Here are classes that could be used:

1. InventoryItem

Purpose: Represents a single inventory item with batches.

Integrates Functions: generate_unique_id, reduce_stock_on_sale, compute_available_quantity, alert_expiring_items

Attributes: _item_id, _name, _unit, _threshold, _batches

Methods:

add_batch(quantity, expiration=None) → add a batch (maps to add_batch)

compute_available_quantity(include_expired=False) → total stock

reduce_stock(quantity, use_fifo=True) → reduce stock on sale

alert_expiring_items(days_threshold=3) → near-expiry batches

__str__ / __repr__


2. Batch

Purpose: Represents a single batch for an inventory item.

Attributes: _quantity, _expiration

Methods:

is_expired() → check if expired

use(quantity) → reduce batch quantity (support FIFO)

__str__ / __repr__



3. Inventory

Purpose: Manages all inventory items.

Integrates Functions: add_new_item, format_inventory_snapshot, export_inventory_csv, mark_expired_items, calculate_reorder_list, generate_restock_plan

Attributes: _items (dict of InventoryItem objects)

Methods:

add_new_item(item_id, name, unit, threshold=0)

get_item(item_id)

mark_expired_items()

calculate_reorder_list()

format_snapshot()

export_csv(filepath)

generate_restock_plan(usage_log, lead_time_days=3)
